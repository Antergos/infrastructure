version: '3.1'

services:
  nodebb:
    build:
      context: ./nodebb-alpine
      args:
        NODE_ENV: "${NODE_ENV:-development}"
    image: antergos/nodebb-alpine
    secrets:
      - nodebb_secret
    volumes:
      - theme:/theme

  nginx:
    image: nginx:alpine
    environment:
      NODE_ENV: "${NODE_ENV:-development}"
    ports:
      - '8080:8080'
    command: ["nginx", "-g", "daemon off;"]
    entrypoint: /entrypoint/nginx
    depends_on:
      - nodebb
    secrets:
      - "nginx_fullchain_${NODE_ENV}"
      - "nginx_privkey_${NODE_ENV}"
    volumes:
      - entrypoints:/entrypoint
      - config:/config

  redis:
    image: redis:alpine
    command: redis-server --appendonly yes
    entrypoint: /entrypoint/redis
    secrets:
      - redis_rdb
      - redis_aof
    volumes:
      - entrypoints:/entrypoint

secrets:
  nginx_fullchain:
    file: "./private/nginx/production/fullchain.pem"
  nginx_privkey:
    file: "./private/nginx/production/privkey.pem"
  nginx_fullchain_development:
    file: "./private/nginx/development/fullchain.pem"
  nginx_privkey_development:
    file: "./private/nginx/development/privkey.pem"
  nodebb_secret:
    file: "./private/nodebb/SECRET"
  redis_rdb:
    file: "./private/redis/dump.rdb.tar.xz"
  redis_aof:
    file: "./private/redis/appendonly.aof.tar.xz"

volumes:
  entrypoints:
    driver: local-persist
    driver_opts:
      mountpoint: "${PWD}/entrypoints"
  theme:
    driver: local-persist
    driver_opts:
      mountpoint: "${PWD}/theme"
  config:
    driver: local-persist
    driver_opts:
      mountpoint: "${PWD}/config"

